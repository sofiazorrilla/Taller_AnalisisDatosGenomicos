---
title: "Datos crudos a SNPs"
author: "Taller de análisis de datos genómicos"
format: 
    revealjs: 
        slide-number: c # mostrar solo el número de la diapositiva
        show-slide-number: all # mostrar la numeración para todas las vistas
        footer: "Reveal js Quarto" # pie de diapositiva
        menu: 
            side: left # mostrar menu de herramientas a la izquierda
        
---
## Flujo de trabajo

1. Archivos crudos
2. Descomprimir 
3. Revisión de calidad 
4. Alineación a genoma de referencia 
5. Llamado de SNPs


## RADseq

:::{style="width: 500px; position: absolute; top: 0%; right: 20%"}
![](imagenes/radseq.png)
:::

::: footer
Archivos crudos
:::

## 
:::{style="width: 1300px; position: absolute; top: 30%; right: -18%"}
![](imagenes/demultiplex.png)
:::

::: footer
Archivos crudos
:::

## fastq

```{.bash}
zcat archivo.fastq.gz
```
Ejemplo de archivo fastq (explicar las partes)

## Phred score

Métrica utilizada para evaluar qué tanta confianza tenemos en la base designada en una secuencia. 

$$
Q = -10log E
$$

Tabla

Gráfica 

## Demultiplex

<br>
```{.bash code-line-numbers="|13|"}
input_dir=../data/raw_data/batch_01846
barcodes_file=../data/barcodes/barcodes_01846.txt

#mkdir ../data/demultiplexed_raw2/batch_01846

process_radtags -t 18 \ # número de núcleos
                -p $input_dir \
                -i gzfastq \
                -o ../data/demultiplexed_raw2/batch_01846 \
                -b $barcodes_file \
                --renz_1 pstI \ # enzima de restricción
                -r -c \
                --barcode-dist-1 2 \ # numero de discrepancias en el barcode
                -D \
                &>out_demultiplex_01846.log # una forma de guardar lo que se imprime en pantalla 

```

## barcode file

:::{style="position: absolute; top: 30%; right: 30%"}
```{.bash}
TCCGGAGCGC	ATZ01
CTAACACGGC	CUZ48
AGCTTCGATT	HUT68
TCGCCGCAAT	OAX73
TCAGTTCCGG	VC64
CGGAAGTGAG	LIPA01
GTTGCTAGAC	OLV04
AATAGATTCA	TRI08
AGCTGATACA	ATZ07
...
```
:::

## Demultiplex

```
Processing single-end data.
Using Phred+33 encoding for quality scores.
Found 1 input file(s).
Searching for single-end, inlined barcodes.
Loaded 96 barcodes (10bp).
Will attempt to recover barcodes with at most 2 mismatches.
Setting number of threads to 18; 1 reader thread; 4 writer threads; 13 worker threads.
Processing file 1 of 1 [Qins_2019004-01846.fastq.gz]
  Processing RAD-Tags...1M...2M...3M...4M...5M...6M...7M...8M...9M...10M...11M...
12M...13M...14M...15M...16M...17M...18M...19M...20M...21M...22M...23M...24M...25M...
26M...27M...28M...29M...30M...31M...32M...33M...34M...35M...36M...37M...38M...39M...
40M...41M...42M...43M...44M...45M...46M...47M...48M...49M...50M...51M...52M...53M...
54M...55M...56M...57M...58M...59M...60M...61M...62M...63M...64M...65M...66M...67M...
68M...69M...70M...71M...72M...73M...74M...75M...76M...77M...78M...79M...80M...81M...
...
...
561320480 total reads; -113381046 ambiguous barcodes; -7148939 ambiguous RAD-Tags; +12292198 recovered; -60222 low quality reads; 440730273 retained reads.
Closing files, flushing buffers...done.

561320480 total sequences
113381046 barcode not found drops (20.2%)
    60222 low quality read drops (0.0%)
  7148939 RAD cutsite not found drops (1.3%)
440730273 retained reads (78.5%)

```

## Revisión de calidad

![](imagenes/calidad.png)

## FastQC



